#!/usr/bin/env node

'use strict';

let rollup = require('rollup').rollup;
let babel = require('rollup-plugin-babel');
let babelrc = require('babelrc-rollup').default;
let filesize = require('file-size');
let gzipSize = require('gzip-size').sync;
let stat = require('fs').statSync;
let minify = require('uglify-js').minify;

rollup({
  entry: 'src/lgtm.js',
  plugins: [babel(babelrc())]
}).then(bundle => {
  return Promise.all([
    bundle.write({
      dest: 'dist/lgtm.js',
      format: 'umd',
      moduleName: 'LGTM',
      sourceMap: true
    }),
    bundle.write({
      dest: 'dist/lgtm.mjs',
      format: 'es6',
      sourceMap: true
    })
  ]);
}).then(() => {
  printFileInfo('dist/lgtm.js');
}).catch(err => console.error(err.stack));

function printFileInfo(path) {
  let size = stat(path).size;
  let minified = minify(path, { acorn: true }).code;
  console.log(
    `â†’ ${path} (raw: ${filesize(size).human('si')} / min: ${filesize(minified.length).human('si')} ` +
    `/ min+gzip: ${filesize(gzipSize(minified)).human('si')})`
  );
}
